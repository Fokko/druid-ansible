druid.host={{ ansible_fqdn }}:{{ port }}
druid.port={{ port }}
druid.service=overlord



druid.storage.type={{ deep_storage_type }}
druid.storage.storageDirectory={{ deep_storage_location }}
druid.indexer.fork.property.druid.storage.type = {{ deep_storage_type }}
druid.indexer.fork.property.druid.storage.storageDirectory = {{ deep_storage_location }}

#druid.extensions.coordinates=["io.druid.extensions:druid-s3-extensions:0.6.160"]

druid.zk.service.host={{ zookeeper }}
druid.zk.paths.base=/druid/prod

druid.discovery.curator.path=/prod/discovery
druid.selectors.indexing.serviceName=overlord

#druid.s3.accessKey=#{ACCESS_KEY}
#druid.s3.secretKey=#{SECRET_KEY}

druid.db.connector.connectURI={{ mysql_connect_uri }}
#jdbc:mysql://mysqlzookeeper:3306/druid

druid.db.connector.user={{ mysql_druid_user }}
druid.db.connector.password={{ mysql_druid_password }}
#diurd
druid.db.connector.useValidationQuery=true
druid.db.tables.base=prod

# Upload all task logs to deep storage
druid.indexer.logs.type={{ task_log_type }}
druid.indexer.logs.directory={{ task_log_directory }}
# Run in remote mode
druid.indexer.runner.type=remote
druid.indexer.runner.compressZnodes=true
druid.indexer.queue.maxSize=10
#druid.indexer.runner.minWorkerVersion=#{WORKER_VERSION}

# Store all task state in MySQL
druid.indexer.storage.type={{ task_storage_type }}
# If you choose to compress ZK announcements, you must do so for every node type
druid.announcer.type=batch
druid.curator.compress=true


druid.extensions.coordinates=["io.druid.extensions:mysql-metadata-storage:{{ druid_version }}","io.druid.extensions:druid-hdfs-storage:{{ druid_version }}"]
druid.extensions.searchCurrentClassloader=true
druid.metadata.storage.type={{ metadata_storage_type }}
druid.metadata.storage.connector.connectURI={{ mysql_connect_uri }}
druid.metadata.storage.connector.user={{ mysql_druid_user }}
druid.metadata.storage.connector.password={{ mysql_druid_password }}
druid.metadata.storage.connector.useValidationQuery=true
druid.extensions.remoteRepositories=[{{ remote_repositories }}]
